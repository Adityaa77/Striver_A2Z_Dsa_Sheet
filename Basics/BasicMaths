#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void setupIO() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
}


int main(){
setupIO();
//extraction of digits
//Counting of digits(added a count integer)
//reverse number(reverse*10+lastdigit inside the while loop)
//checking palendrome(same number when reverse eg-121,create a duplicate of n for this to work)
//armstrong number-summation of the cube of its digits,ex-371 so 3^3 + 7^3 + 1^3 =371(og number)
int n;
int lastdigit;
int count=0;
int reverse=0;
cin>>n;
cout<<"value of n="<<n<<endl;
int dup=n;
int armstrong=0;
while(n>0){
    lastdigit=n % 10;
    armstrong=armstrong+(lastdigit*lastdigit*lastdigit);
    cout<<"this is the value of the digit"<<n<<endl;
    n=n/10;
    cout<<"This is the last digit-"<<lastdigit<<endl;
    count=count+1;
    reverse=reverse*10+lastdigit;
    
}
    cout<<"The total number of the digits are--"<<count<<endl;
    cout<<"Reverse number--"<<reverse<<endl;
    if(reverse==dup){
        cout<<"this is a palindrome"<<endl;
    }
    else{
        cout<<"this is not a palindrome"<<endl;
    }
    if(armstrong==dup){
        cout<<"this is an armstrong number"<<endl;
    }
    else{
        cout<<"this is not an armstrong"<<endl;
    }

//printing all the divisors 
/*int i=36;
for(int num=1;num<=i;num++){
    if(i%num==0){
        cout<<num<<" ";
    }
}*/
//check prime number 

/*int num = 4;
int cnt = 0;

for (int i = 1; i * i <= num; i++) {
    if (num % i == 0) {
        cnt++; // i is a divisor
        if (i != num / i) {
            cnt++; // num/i is a different divisor
        }
    }
}

if (cnt == 2) {
    cout << "prime number" << endl;
} else {
    cout << "not prime" << endl;
}*/

//checking gcd
int n1=9;
int n2=12;
int gcd=1;
for (int i=1;i<=n1 && i<=n2;i++){
    if(n1%i==0 && n2%i==0){
        gcd=i;
}
}
cout<<"gcd- "<<gcd<<endl;
return 0;
}
